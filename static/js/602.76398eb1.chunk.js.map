{"version":3,"file":"static/js/602.76398eb1.chunk.js","mappings":"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","sources":["features/users-list-actions/ui.tsx","webpack://ts-user-rates/./src/features/rate-user/styles.module.scss?38aa","features/rate-user/ui.tsx","webpack://ts-user-rates/./src/features/reset-user-dialog/styles.module.scss?6b9b","features/reset-user-dialog/ui.tsx","widgets/users-list/index.tsx","widgets/user-tabs/index.tsx","webpack://ts-user-rates/./src/pages/users-list/styles.module.scss?1750","pages/users-list/index.tsx"],"sourcesContent":["import {useCallback} from \"react\";\r\nimport {Button, ButtonGroup} from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userModel } from \"entities/user\";\r\n\r\nimport AutoRenewRoundedIcon from '@mui/icons-material/AutorenewRounded';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\nexport const UserListActions = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isFetching = userModel.useIsUsersListLoading();\r\n\r\n    const onReloadUsers = useCallback(() => {\r\n        dispatch(userModel.getUserEntries({ size: 3, overwrite: true }))\r\n    }, [dispatch]);\r\n\r\n    const onLoadMoreUsers = useCallback(() => {\r\n        dispatch(userModel.getMoreUsers({ size: 6 }))\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ButtonGroup>\r\n            <Button disabled={isFetching} variant=\"contained\" startIcon={<AutoRenewRoundedIcon />} onClick={onReloadUsers}>\r\n                Reload Users\r\n            </Button>\r\n            <Button disabled={isFetching} variant=\"contained\" startIcon={<AddCircleOutlineOutlinedIcon />} onClick={onLoadMoreUsers}>\r\n                Add More Users\r\n            </Button>\r\n        </ButtonGroup>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"ButtonBlock\":\"styles_ButtonBlock__0Fx7U\"};","import {useCallback} from \"react\";\r\nimport {Button, ButtonGroup } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {resetUserRating, updateUserRate} from \"entities/user/model\";\r\nimport {User} from \"entities/user/model/types\";\r\n\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport styles from './styles.module.scss'\r\n\r\ninterface RateUserProps {\r\n    user: User\r\n}\r\n\r\nexport const RateUserControls = ({ user }: RateUserProps) => {\r\n    const dispatch = useDispatch();\r\n    const onRateUp = useCallback(() => {\r\n        dispatch(updateUserRate({ id: user.id, modifier: +1 }))\r\n    }, [dispatch, user.id]);\r\n\r\n    const onRateDown = useCallback(() => {\r\n        dispatch(updateUserRate({ id: user.id, modifier: -1 }))\r\n    }, [dispatch, user.id]);\r\n\r\n    const onRateReset = useCallback(() => {\r\n        dispatch(resetUserRating({ id: user.id }))\r\n    }, [dispatch, user.id]);\r\n\r\n    return (\r\n        <ButtonGroup color='info' size='small' className={styles.ButtonBlock}>\r\n            <Button variant=\"contained\" onClick={onRateDown} title=\"Decrease rating\"><RemoveCircleOutlineOutlinedIcon /></Button>\r\n            <Button variant=\"contained\" onClick={onRateUp} title=\"Increase rating\"><AddCircleOutlineOutlinedIcon /></Button>\r\n            {\r\n                user.isRated ? <Button variant=\"contained\" onClick={onRateReset} title=\"Reset rating\"><HighlightOffIcon /></Button> : null\r\n            }\r\n\r\n        </ButtonGroup>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"DialogContent\":\"styles_DialogContent__AdIv-\"};","import {useCallback, useEffect, useState} from \"react\";\r\nimport {Button, Dialog} from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetUserRating } from \"entities/user/model\";\r\nimport {User} from \"entities/user/model/types\";\r\n\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ResetUserDialogProps {\r\n    user: User\r\n}\r\n\r\nexport const ResetUserDialog = ({ user }: ResetUserDialogProps) => {\r\n    const dispatch = useDispatch();\r\n    const [isRewardOpen, setIsRewardOpen] = useState(false);\r\n    const [isBanOpen, setIsBanOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user.rating >= 5) {\r\n            setIsRewardOpen(true);\r\n        }\r\n        if (user.rating <= -5) {\r\n            setIsBanOpen(true);\r\n        }\r\n    }, [user.rating])\r\n\r\n    const handleRewardClose = useCallback(() => {\r\n        setIsRewardOpen(false);\r\n    }, []);\r\n    const handleBanClose = useCallback(() => {\r\n        setIsBanOpen(false);\r\n    }, []);\r\n\r\n    const handleReset = useCallback(() => {\r\n        dispatch(resetUserRating({ id: user.id }))\r\n    }, [dispatch, user.id])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={isRewardOpen} onClose={handleRewardClose} >\r\n                <div className={styles.DialogContent}>\r\n                    Would you like to reward this user? :)\r\n                    <Button variant=\"contained\"  onClick={handleReset}>Reward user</Button>\r\n                </div>\r\n            </Dialog>\r\n            <Dialog open={isBanOpen} onClose={handleBanClose} >\r\n                <div className={styles.DialogContent}>\r\n                    Would you like to BAN this user? &gt;:|\r\n                    <Button variant=\"contained\"  onClick={handleReset}>Ban user</Button>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n\r\n    );\r\n};","import * as React from 'react';\r\nimport {CircularProgress, List} from \"@mui/material\";\r\nimport {User} from \"entities/user/model/types\";\r\nimport {UserRow} from \"entities/user\";\r\n\r\ninterface UsersListProps {\r\n    rows: User[],\r\n    isFetching: boolean,\r\n    after?: React.FC<{ user: User}> | React.FC<{ user: User}>[] | null\r\n}\r\n\r\nconst UsersList = ({ rows, after: After, isFetching } : UsersListProps) => {\r\n\r\n    if (isFetching) {\r\n        return <CircularProgress color={'primary'}></CircularProgress>;\r\n    }\r\n\r\n    const entries = rows.map((user) => {\r\n        return <UserRow key={user.id} user={user} after={After} />\r\n    })\r\n    return <List>\r\n        { entries.length ? entries : 'No User record available' }\r\n    </List>\r\n};\r\nexport default UsersList;","import * as React from 'react';\r\nimport {Box, Tab, Tabs, Typography} from \"@mui/material\";\r\nimport {ReactElement, } from \"react\";\r\n\r\ninterface UserListTabsProps {\r\n    tabs: Array<String>,\r\n    content: ReactElement[]\r\n}\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst UserListTabs = ({ tabs, content } : UserListTabsProps) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs onChange={handleChange} aria-label=\"lab API tabs example\" value={value}>\r\n                        {\r\n                            tabs.map((el, idx) => <Tab key={idx} value={idx} label={el} />)\r\n                        }\r\n                    </Tabs>\r\n                </Box>\r\n                { content.map((el, idx) => <TabPanel index={idx} key={idx} value={value}>{el}</TabPanel>)}\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default UserListTabs;","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"styles_main__SZPjT\",\"description\":\"styles_description__A2dXy\",\"code\":\"styles_code__RcfT8\",\"grid\":\"styles_grid__FpXhn\",\"card\":\"styles_card__NHzZ8\",\"center\":\"styles_center__vf0i1\",\"logo\":\"styles_logo__fBTFQ\",\"content\":\"styles_content__1isLV\",\"vercelLogo\":\"styles_vercelLogo__JAMYo\",\"rotate\":\"styles_rotate__+NDCI\"};","import { useEffect } from \"react\";\r\nimport { isRouteErrorResponse, useRouteError } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userModel } from \"entities/user\";\r\nimport { UserListActions } from \"features/users-list-actions\";\r\nimport { RateUserControls } from \"features/rate-user/ui\";\r\nimport { ResetUserDialog } from \"features/reset-user-dialog\";\r\nimport UsersList from \"widgets/users-list\";\r\nimport UserListTabs from \"widgets/user-tabs\";\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nexport function Component() {\r\n    const dispatch = useDispatch();\r\n    const isFetching = userModel.useIsUsersListLoading();\r\n    const unratedUsers = userModel.useUnratedUsers();\r\n    const upVotedUsers = userModel.useUpVotedUsers();\r\n    const downVotedUsers = userModel.useDownVotedUsers();\r\n\r\n    useEffect(() => {\r\n        dispatch(userModel.getUserEntries({size: 3, overwrite: false}));\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <main className={styles.main}>\r\n            <UserListActions/>\r\n            <Grid container spacing={2} className={styles.container}>\r\n                <Grid className={styles.UserListColumn} item={true} sm={12} md={6} padding={5}>\r\n                    <h3> Users with no rating </h3>\r\n                    <UsersList rows={unratedUsers} isFetching={isFetching} after={[RateUserControls]}/>\r\n                </Grid>\r\n                <Grid className={styles.UserListColumn} item={true} sm={12} md={6} padding={5}>\r\n                    <UserListTabs\r\n                        tabs={['UpVoted', 'DownVoted']}\r\n                        content={[\r\n                            <UsersList rows={upVotedUsers} isFetching={isFetching}\r\n                                       after={[RateUserControls, ResetUserDialog]}/>,\r\n                            <UsersList rows={downVotedUsers} isFetching={isFetching}\r\n                                       after={[RateUserControls, ResetUserDialog]}/>,\r\n                        ]}/>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\n// If you want to customize the component display name in React dev tools:\r\nComponent.displayName = \"LazyUsersList\";\r\n\r\nexport function ErrorBoundary() {\r\n    let error = useRouteError();\r\n    let errorMessage: string;\r\n    if (isRouteErrorResponse(error)) {\r\n        // error is type `ErrorResponse`\r\n        errorMessage = error.error?.message || error.statusText;\r\n    } else if (error instanceof Error) {\r\n        errorMessage = error.message;\r\n    } else if (typeof error === 'string') {\r\n        errorMessage = error;\r\n    } else {\r\n        console.error(error);\r\n        errorMessage = 'Unknown error';\r\n    }\r\n\r\n    return (\r\n        <div id='error-page' className='flex flex-col gap-8 justify-center items-center h-screen'>\r\n            <h1 className='text-4xl font-bold'>Oops!</h1>\r\n            <p>Sorry, an unexpected error has occurred.</p>\r\n            <p className='text-slate-400'>\r\n                <i>{errorMessage}</i>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// If you want to customize the component display name in React dev tools:\r\nErrorBoundary.displayName = \"UsersListErrorBoundary\";"],"names":["UserListActions","dispatch","useDispatch","isFetching","userModel","onReloadUsers","useCallback","size","overwrite","onLoadMoreUsers","_jsxs","ButtonGroup","children","_jsx","Button","disabled","variant","startIcon","AutoRenewRoundedIcon","onClick","AddCircleOutlineOutlinedIcon","RateUserControls","_ref","user","onRateUp","updateUserRate","id","modifier","onRateDown","onRateReset","resetUserRating","color","className","styles","title","RemoveCircleOutlineOutlinedIcon","isRated","HighlightOffIcon","ResetUserDialog","_useState","useState","_useState2","_slicedToArray","isRewardOpen","setIsRewardOpen","_useState3","_useState4","isBanOpen","setIsBanOpen","useEffect","rating","handleRewardClose","handleBanClose","handleReset","_Fragment","Dialog","open","onClose","rows","After","after","CircularProgress","entries","map","UserRow","List","length","TabPanel","props","value","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","concat","Box","sx","p","Typography","tabs","content","_React$useState","React","_React$useState2","setValue","width","typography","borderBottom","borderColor","Tabs","onChange","event","newValue","el","idx","Tab","label","Component","unratedUsers","upVotedUsers","downVotedUsers","Grid","container","spacing","item","sm","md","padding","UsersList","UserListTabs","ErrorBoundary","errorMessage","_error$error","error","useRouteError","isRouteErrorResponse","message","statusText","Error","console","displayName"],"sourceRoot":""}